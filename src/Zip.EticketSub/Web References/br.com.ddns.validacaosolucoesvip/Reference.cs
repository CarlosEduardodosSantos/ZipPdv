//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Zip.EticketSub.br.com.ddns.validacaosolucoesvip {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CHKSoap", Namespace="http://validacaosolucoesvip.ddns.com.br:8090/")]
    public partial class CHK : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StatusClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VersaoSatOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataAtualOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CHK() {
            this.Url = global::Zip.EticketSub.Properties.Settings.Default.Zip_EticketSub_br_com_ddns_validacaosolucoesvip_CHK;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StatusClienteCompletedEventHandler StatusClienteCompleted;
        
        /// <remarks/>
        public event VersaoSatCompletedEventHandler VersaoSatCompleted;
        
        /// <remarks/>
        public event DataAtualCompletedEventHandler DataAtualCompleted;
        
        /// <remarks/>
        public event UserInfoCompletedEventHandler UserInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://validacaosolucoesvip.ddns.com.br:8090/StatusCliente", RequestNamespace="http://validacaosolucoesvip.ddns.com.br:8090/", ResponseNamespace="http://validacaosolucoesvip.ddns.com.br:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StatusCliente(string CNPJ, string Chave, string Micro, string IP) {
            object[] results = this.Invoke("StatusCliente", new object[] {
                        CNPJ,
                        Chave,
                        Micro,
                        IP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StatusClienteAsync(string CNPJ, string Chave, string Micro, string IP) {
            this.StatusClienteAsync(CNPJ, Chave, Micro, IP, null);
        }
        
        /// <remarks/>
        public void StatusClienteAsync(string CNPJ, string Chave, string Micro, string IP, object userState) {
            if ((this.StatusClienteOperationCompleted == null)) {
                this.StatusClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatusClienteOperationCompleted);
            }
            this.InvokeAsync("StatusCliente", new object[] {
                        CNPJ,
                        Chave,
                        Micro,
                        IP}, this.StatusClienteOperationCompleted, userState);
        }
        
        private void OnStatusClienteOperationCompleted(object arg) {
            if ((this.StatusClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatusClienteCompleted(this, new StatusClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://validacaosolucoesvip.ddns.com.br:8090/VersaoSat", RequestNamespace="http://validacaosolucoesvip.ddns.com.br:8090/", ResponseNamespace="http://validacaosolucoesvip.ddns.com.br:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VersaoSat(string modelo) {
            object[] results = this.Invoke("VersaoSat", new object[] {
                        modelo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersaoSatAsync(string modelo) {
            this.VersaoSatAsync(modelo, null);
        }
        
        /// <remarks/>
        public void VersaoSatAsync(string modelo, object userState) {
            if ((this.VersaoSatOperationCompleted == null)) {
                this.VersaoSatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersaoSatOperationCompleted);
            }
            this.InvokeAsync("VersaoSat", new object[] {
                        modelo}, this.VersaoSatOperationCompleted, userState);
        }
        
        private void OnVersaoSatOperationCompleted(object arg) {
            if ((this.VersaoSatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersaoSatCompleted(this, new VersaoSatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://validacaosolucoesvip.ddns.com.br:8090/DataAtual", RequestNamespace="http://validacaosolucoesvip.ddns.com.br:8090/", ResponseNamespace="http://validacaosolucoesvip.ddns.com.br:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DataAtual() {
            object[] results = this.Invoke("DataAtual", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataAtualAsync() {
            this.DataAtualAsync(null);
        }
        
        /// <remarks/>
        public void DataAtualAsync(object userState) {
            if ((this.DataAtualOperationCompleted == null)) {
                this.DataAtualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataAtualOperationCompleted);
            }
            this.InvokeAsync("DataAtual", new object[0], this.DataAtualOperationCompleted, userState);
        }
        
        private void OnDataAtualOperationCompleted(object arg) {
            if ((this.DataAtualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataAtualCompleted(this, new DataAtualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://validacaosolucoesvip.ddns.com.br:8090/UserInfo", RequestNamespace="http://validacaosolucoesvip.ddns.com.br:8090/", ResponseNamespace="http://validacaosolucoesvip.ddns.com.br:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserInfo() {
            object[] results = this.Invoke("UserInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserInfoAsync() {
            this.UserInfoAsync(null);
        }
        
        /// <remarks/>
        public void UserInfoAsync(object userState) {
            if ((this.UserInfoOperationCompleted == null)) {
                this.UserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserInfoOperationCompleted);
            }
            this.InvokeAsync("UserInfo", new object[0], this.UserInfoOperationCompleted, userState);
        }
        
        private void OnUserInfoOperationCompleted(object arg) {
            if ((this.UserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserInfoCompleted(this, new UserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    public delegate void StatusClienteCompletedEventHandler(object sender, StatusClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatusClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatusClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    public delegate void VersaoSatCompletedEventHandler(object sender, VersaoSatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersaoSatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersaoSatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    public delegate void DataAtualCompletedEventHandler(object sender, DataAtualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataAtualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataAtualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    public delegate void UserInfoCompletedEventHandler(object sender, UserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3921.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591